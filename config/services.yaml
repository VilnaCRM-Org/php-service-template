# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    App\Eternal\HealthCheck\Application\Processor\HealthCheckProcessor:
        public: true
        arguments:
            $commandBus: '@App\Shared\Infrastructure\Bus\Command\InMemorySymfonyCommandBus'
            $healthCheckCommandFactory: '@App\Eternal\HealthCheck\Application\HealthCheckCommandFactoryInterface'

    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/Shared/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    _instanceof:
        # services whose classes are instances of CustomInterface will be tagged automatically
        App\Shared\Domain\Bus\Command\CommandHandlerInterface:
            tags: [ 'app.command_handler' ]


    App\Shared\Infrastructure\Bus\Command\InMemorySymfonyCommandBus:
        arguments: ['@App\Shared\Infrastructure\Bus\MessageBusFactory', !tagged app.command_handler ]
        lazy: true

    App\Shared\Infrastructure\Bus\Event\InMemorySymfonyEventBus:
        arguments: ['@App\Shared\Infrastructure\Bus\MessageBusFactory',  !tagged app.event_subscriber ]
        lazy: true

